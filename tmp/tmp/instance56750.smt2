;test regex pcregrep -M '(foo(\n*.*?){0,4}bar)?(bar(\n*.*?){0,4}foo)?' filename
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "p") (re.++ (str.to_re "c") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "M") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (re.opt (re.++ (str.to_re "f") (re.++ (str.to_re "o") (re.++ (str.to_re "o") (re.++ ((_ re.loop 0 4) (re.++ (re.* (str.to_re "\u{0a}")) (re.* (re.diff re.allchar (str.to_re "\n"))))) (re.++ (str.to_re "b") (re.++ (str.to_re "a") (str.to_re "r")))))))) (re.++ (re.opt (re.++ (str.to_re "b") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ ((_ re.loop 0 4) (re.++ (re.* (str.to_re "\u{0a}")) (re.* (re.diff re.allchar (str.to_re "\n"))))) (re.++ (str.to_re "f") (re.++ (str.to_re "o") (str.to_re "o")))))))) (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "f") (re.++ (str.to_re "i") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.++ (str.to_re "n") (re.++ (str.to_re "a") (re.++ (str.to_re "m") (str.to_re "e")))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 20 (str.len X)))
(check-sat)
(get-model)