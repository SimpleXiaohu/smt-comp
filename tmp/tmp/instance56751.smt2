;test regex $line =~ s/gene_id "([A-Za-z0-9:\-._]*_[oO])([_.])[0-9]*";/gene_id "$1${2}1";/g;
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (str.to_re "") (re.++ (str.to_re "l") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "=") (re.++ (str.to_re "~") (re.++ (str.to_re " ") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "n") (re.++ (str.to_re "e") (re.++ (str.to_re "_") (re.++ (str.to_re "i") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (re.++ (re.* (re.union (re.range "A" "Z") (re.union (re.range "a" "z") (re.union (re.range "0" "9") (re.union (str.to_re ":") (re.union (str.to_re "-") (re.union (str.to_re ".") (str.to_re "_")))))))) (re.++ (str.to_re "_") (re.union (str.to_re "o") (str.to_re "O")))) (re.++ (re.union (str.to_re "_") (str.to_re ".")) (re.++ (re.* (re.range "0" "9")) (re.++ (str.to_re "\u{22}") (re.++ (str.to_re ";") (re.++ (str.to_re "/") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "n") (re.++ (str.to_re "e") (re.++ (str.to_re "_") (re.++ (str.to_re "i") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (str.to_re "\u{22}"))))))))))))))))))))))))))))))))))) (re.++ (str.to_re "") (str.to_re "1"))) (re.++ ((_ re.loop 2 2) (str.to_re "")) (re.++ (str.to_re "1") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re ";") (re.++ (str.to_re "/") (re.++ (str.to_re "g") (str.to_re ";"))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 20 (str.len X)))
(check-sat)
(get-model)