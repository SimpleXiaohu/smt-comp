;test regex regExpPattern=@"(([+]{1}|[0]{2}){0,1}+[1]{1}){0,1}+[ ]{0,1}+(?:[-( ]{0,1}[0-9]{3}[-) ]{0,1}){0,1}+[ ]{0,1}+[0-9]{2,3}+[0-9- ]{4,8}";
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "E") (re.++ (str.to_re "x") (re.++ (str.to_re "p") (re.++ (str.to_re "P") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "n") (re.++ (str.to_re "=") (re.++ (str.to_re "@") (re.++ (str.to_re "\u{22}") (re.++ (re.+ ((_ re.loop 0 1) (re.++ (re.+ ((_ re.loop 0 1) (re.union ((_ re.loop 1 1) (str.to_re "+")) ((_ re.loop 2 2) (str.to_re "0"))))) ((_ re.loop 1 1) (str.to_re "1"))))) (re.++ (re.+ ((_ re.loop 0 1) (str.to_re " "))) (re.++ (re.+ ((_ re.loop 0 1) (re.++ ((_ re.loop 0 1) (re.union (str.to_re "-") (re.union (str.to_re "(") (str.to_re " ")))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) ((_ re.loop 0 1) (re.union (str.to_re "-") (re.union (str.to_re ")") (str.to_re " ")))))))) (re.++ (re.+ ((_ re.loop 0 1) (str.to_re " "))) (re.++ (re.+ ((_ re.loop 2 3) (re.range "0" "9"))) (re.++ ((_ re.loop 4 8) (re.union (re.range "0" "9") (re.union (str.to_re "-") (str.to_re " ")))) (re.++ (str.to_re "\u{22}") (str.to_re ";"))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 20 (str.len X)))
(check-sat)
(get-model)