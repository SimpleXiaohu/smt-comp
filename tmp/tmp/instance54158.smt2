;test regex echo "a\nabc\naaaa\nbaa\nthe\naaabcd\nadc" | egrep "^a+[bcd]{0,}$"
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "a") (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "a") (re.++ (str.to_re "b") (re.++ (str.to_re "c") (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "a") (re.++ (str.to_re "a") (re.++ (str.to_re "a") (re.++ (str.to_re "a") (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "b") (re.++ (str.to_re "a") (re.++ (str.to_re "a") (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "t") (re.++ (str.to_re "h") (re.++ (str.to_re "e") (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "a") (re.++ (str.to_re "a") (re.++ (str.to_re "a") (re.++ (str.to_re "b") (re.++ (str.to_re "c") (re.++ (str.to_re "d") (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "a") (re.++ (str.to_re "d") (re.++ (str.to_re "c") (re.++ (str.to_re "\u{22}") (str.to_re " "))))))))))))))))))))))))))))))))))))) (re.++ (re.++ (re.++ (str.to_re " ") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (str.to_re "\u{22}")))))))) (re.++ (str.to_re "") (re.++ (re.+ (str.to_re "a")) (re.++ (re.* (re.union (str.to_re "b") (re.union (str.to_re "c") (str.to_re "d")))) ((_ re.loop 0 0) (re.union (str.to_re "b") (re.union (str.to_re "c") (str.to_re "d")))))))) (re.++ (str.to_re "") (str.to_re "\u{22}"))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 20 (str.len X)))
(check-sat)
(get-model)