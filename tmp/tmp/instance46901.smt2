;test regex perl -pe 's/(0x)?[0-9a-f]{5,}/hex $&/ge' file | column -t
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (re.++ (str.to_re "p") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "l") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "p") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (re.opt (re.++ (str.to_re "0") (str.to_re "x"))) (re.++ (re.++ (re.* (re.union (re.range "0" "9") (re.range "a" "f"))) ((_ re.loop 5 5) (re.union (re.range "0" "9") (re.range "a" "f")))) (re.++ (str.to_re "/") (re.++ (str.to_re "h") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (str.to_re " "))))))))))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "&") (re.++ (str.to_re "/") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "f") (re.++ (str.to_re "i") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (str.to_re " "))))))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "c") (re.++ (str.to_re "o") (re.++ (str.to_re "l") (re.++ (str.to_re "u") (re.++ (str.to_re "m") (re.++ (str.to_re "n") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (str.to_re "t")))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 20 (str.len X)))
(check-sat)
(get-model)