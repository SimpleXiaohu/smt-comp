;test regex (\D+)(noon|midnight|\d{1,2})(?::(\d{0,2})| o'clock)?(?: )?(p.m.|a.m.|noon|midnight)?
(declare-const X String)
(assert (str.in_re X (re.++ (re.+ (re.diff re.allchar (re.range "0" "9"))) (re.++ (re.union (re.union (re.++ (str.to_re "n") (re.++ (str.to_re "o") (re.++ (str.to_re "o") (str.to_re "n")))) (re.++ (str.to_re "m") (re.++ (str.to_re "i") (re.++ (str.to_re "d") (re.++ (str.to_re "n") (re.++ (str.to_re "i") (re.++ (str.to_re "g") (re.++ (str.to_re "h") (str.to_re "t"))))))))) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.opt (re.union (re.++ (str.to_re ":") ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ (str.to_re " ") (re.++ (str.to_re "o") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "c") (re.++ (str.to_re "l") (re.++ (str.to_re "o") (re.++ (str.to_re "c") (str.to_re "k")))))))))) (re.++ (re.opt (str.to_re " ")) (re.opt (re.union (re.union (re.union (re.++ (str.to_re "p") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "m") (re.diff re.allchar (str.to_re "\n"))))) (re.++ (str.to_re "a") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "m") (re.diff re.allchar (str.to_re "\n")))))) (re.++ (str.to_re "n") (re.++ (str.to_re "o") (re.++ (str.to_re "o") (str.to_re "n"))))) (re.++ (str.to_re "m") (re.++ (str.to_re "i") (re.++ (str.to_re "d") (re.++ (str.to_re "n") (re.++ (str.to_re "i") (re.++ (str.to_re "g") (re.++ (str.to_re "h") (str.to_re "t"))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 20 (str.len X)))
(check-sat)
(get-model)